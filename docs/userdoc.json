{
	"methods": {
		"addBNOXAdmin(address)": {
			"notice": "Adding an account as a BNOX admin"
		},
		"addTreasuryAdmin(address)": {
			"notice": "Adding an account as a Treasury admin"
		},
		"approve(address,uint256)": {
			"notice": "approve BNOX token to be moved with tranferFrom, only if not paused"
		},
		"burnFrom(address,uint256)": {
			"notice": "burning BNOX token from a given account, only if not paused"
		},
		"constructor": "Constructor: creating initial supply and setting one admin",
		"decreaseAllowance(address,uint256)": {
			"notice": "decrease approved BNOX token, only if not paused"
		},
		"getDestinationAccountWL(address)": {
			"notice": "getting if an address is locked as a destinationAddress"
		},
		"getSourceAccountWL(address)": {
			"notice": "getting if an address is locked as a source address"
		},
		"increaseAllowance(address,uint256)": {
			"notice": "increase approved BNOX token, only if not paused"
		},
		"isBNOXAdmin(address)": {
			"notice": "Checking if the address is a BNOX admin"
		},
		"isTreasuryAdmin(address)": {
			"notice": "Checking if the address is a Treasury admin"
		},
		"kill(address)": {
			"notice": "killing the contract, only paused contract can be killed by the admin"
		},
		"mint(address,uint256)": {
			"notice": "mint BNOX token, only Treasury admin, only if no paused"
		},
		"pause()": {
			"notice": "pause the contract"
		},
		"removeBNOXAdmin(address)": {
			"notice": "Removing an account as a BNOX admin"
		},
		"removeTreasuryAdmin(address)": {
			"notice": "Removing an account as a Treasury admin"
		},
		"setBsoFee(uint16)": {
			"notice": "setting a new bsoFee fee"
		},
		"setBsopoolAddress(address)": {
			"notice": "setting a new address for feeAddress"
		},
		"setDestinationAccountWL(address,bool)": {
			"notice": "setting if an address is locked as a destination address"
		},
		"setFeeAddress(address)": {
			"notice": "setting a new address for feeAddress"
		},
		"setGeneralFee(uint16)": {
			"notice": "setting a new general fee"
		},
		"setSourceAccountWL(address,bool)": {
			"notice": "setting if an address is locked as a source address"
		},
		"setTreasuryAddress(address)": {
			"notice": "setting a new address for treasuryAddress"
		},
		"setUrl(string)": {
			"notice": "setting the url referring to the documentation"
		},
		"transfer(address,uint256)": {
			"notice": "transfer BNOX token, only if not paused"
		},
		"transferFrom(address,address,uint256)": {
			"notice": "transferFrom BNOX token, only if not paused"
		},
		"unpause()": {
			"notice": "un-pause the contract"
		}
	},
	"notice": "BNOXToken implementation"
}